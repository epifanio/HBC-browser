FROM ubuntu:20.04

LABEL maintainer="massimods@met.no"
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

RUN apt-get update && apt-get upgrade -y &&\
    # Install build tools, build dependencies and python
    apt-get install -y \
	    python3-pip \
        build-essential \
        gfortran \
        cmake \
        git \
        wget \
        unzip \
        yasm \
        pkg-config \
        libswscale-dev \
        libtbb2 \
        libtbb-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libavformat-dev \
        libavresample-dev \
        libpq-dev \
        libxine2-dev \
        libglew-dev \
        libtiff5-dev \
        zlib1g-dev \
        libjpeg-dev \
        libavcodec-dev \
        libavformat-dev \
        libavutil-dev \
        libpostproc-dev \
        libswscale-dev \
        libeigen3-dev \
        libtbb-dev \
        libgtk2.0-dev \
        pkg-config \
        python3-dev \
        python3-numpy \
        libv4l-dev \
        libxvidcore-dev \
        libx264-dev \
        libgtk-3-dev \
        libtesseract-dev \
        libavc1394-dev \
        pylint \
        libblas-dev \
        liblapack-dev \
        libatlas-base-dev \
        libgdal-dev \
        pktools-dev \
        cmake-curses-gui \
        nano

RUN mkdir -p /opt/cv && \
    cd /opt/cv && git clone https://github.com/opencv/opencv \
    && git clone https://github.com/opencv/opencv_contrib


RUN mkdir -p /opt/cv/opencv/build && cd /opt/cv/opencv/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D BUILD_JASPER=ON \
        -D BUILD_JPEG=ON \
        -D BUILD_OPENEXR=ON \
        -D BUILD_OPENJPEG=ON \
        -D BUILD_PNG=ON \
        -D BUILD_TIFF=ON \
        -D BUILD_ZLIB=ON \
        -D INSTALL_PYTHON_EXAMPLES=ON \
        -D INSTALL_C_EXAMPLES=OFF \
        -D OPENCV_ENABLE_NONFREE=ON \
        -D ENABLE_FAST_MATH=1 \
        -D OPENCV_EXTRA_MODULES_PATH=/opt/cv/opencv_contrib/modules \
        -D HAVE_opencv_python3=ON \
        -D WITH_GDAL=ON \
        -D WITH_FREETYPE=ON \
        -D OPENCV_GENERATE_PKGCONFIG=ON \
        -D BUILD_EXAMPLES=ON .. && \
    make -j"$(nproc)" && \
    make install && \
    ldconfig


RUN apt-get update && apt-get install -y gmt \
                       libgmt-dev \
                       libfftw3-dev \
                       libgl1-mesa-dev \
                       libglu1-mesa-dev \
                       cmake-curses-gui \
                       liblaszip-dev \
                       python3-all-dev \
                       libmotif-dev


COPY OTPS.tar.Z OTPS.tar.Z
RUN tar -zxvf OTPS.tar.Z && rm -rf OTPS.tar.Z && cd OTPS && make


RUN mkdir -p /opt/mb && cd /opt/mb && wget https://github.com/dwcaress/MB-System/archive/5.7.5.tar.gz && \
    tar -zxvf 5.7.5.tar.gz && \
    cd MB-System-5.7.5 && \
    sh autogen.sh && \
    ./configure --disable-mbtools --with-proj-include=/usr/include \
                --with-otps-dir='/home/geno/PycharmProjects/datascience/docker/00-gpu-dev/OTPS/' \
                --enable-opencv && \
    make -j"$(nproc)" && \
    make install

RUN mkdir -p /opt/pdal && cd /opt/pdal && git clone https://github.com/PDAL/PDAL && \
    cd PDAL && \
    mkdir build && \
    cd build && \
    cmake -DBUILD_PLUGIN_MBIO=ON .. && \
    make -j"$(nproc)" && \
    make install

RUN /usr/bin/python3 -m pip install --upgrade pip && pip install scikit-build
RUN pip3 install Cython

RUN cd /opt/pdal && git clone https://github.com/PDAL/python && cd python && python3 setup.py build && python3 setup.py install


RUN ldconfig /etc/ld.so.conf.d